[{"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\store.js":"3","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\HomePage.js":"4","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ScrollToTop.js":"5","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CitiesPage.js":"6","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ItineraryPage.js":"7","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\AdminPage.js":"8","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js":"9","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js":"10","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Login.js":"11","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionHome.js":"12","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Header.js":"13","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Carousel.js":"14","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Footer.js":"15","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionCities.js":"16","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Cities.js":"17","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionItineraries.js":"18","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js":"19","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\authActions.js":"20","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CarouselFoto.js":"21","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\NotItineraries.js":"22","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Itineraries.js":"23","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Terms.js":"24","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\LoginPage.js":"25","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Register.js":"26"},{"size":326,"mtime":1611702346905,"results":"27","hashOfConfig":"28"},{"size":1707,"mtime":1612771019350,"results":"29","hashOfConfig":"28"},{"size":369,"mtime":1612553026728,"results":"30","hashOfConfig":"28"},{"size":2385,"mtime":1611495397295,"results":"31","hashOfConfig":"28"},{"size":374,"mtime":1611498948271,"results":"32","hashOfConfig":"28"},{"size":784,"mtime":1611825186177,"results":"33","hashOfConfig":"28"},{"size":1023,"mtime":1612069032011,"results":"34","hashOfConfig":"28"},{"size":11212,"mtime":1612424587000,"results":"35","hashOfConfig":"28"},{"size":1442,"mtime":1612165302720,"results":"36","hashOfConfig":"28"},{"size":903,"mtime":1612741380047,"results":"37","hashOfConfig":"28"},{"size":2486,"mtime":1612769492736,"results":"38","hashOfConfig":"28"},{"size":702,"mtime":1611574784254,"results":"39","hashOfConfig":"28"},{"size":3102,"mtime":1612650393817,"results":"40","hashOfConfig":"28"},{"size":704,"mtime":1612160091488,"results":"41","hashOfConfig":"28"},{"size":687,"mtime":1611497410344,"results":"42","hashOfConfig":"28"},{"size":947,"mtime":1612068097301,"results":"43","hashOfConfig":"28"},{"size":1537,"mtime":1612065415961,"results":"44","hashOfConfig":"28"},{"size":2027,"mtime":1612174891387,"results":"45","hashOfConfig":"28"},{"size":1912,"mtime":1612684664352,"results":"46","hashOfConfig":"28"},{"size":2890,"mtime":1612766211903,"results":"47","hashOfConfig":"28"},{"size":393,"mtime":1611181573299,"results":"48","hashOfConfig":"28"},{"size":617,"mtime":1612159722788,"results":"49","hashOfConfig":"28"},{"size":5682,"mtime":1612213387286,"results":"50","hashOfConfig":"28"},{"size":559,"mtime":1612588743185,"results":"51","hashOfConfig":"28"},{"size":2345,"mtime":1612649890783,"results":"52","hashOfConfig":"28"},{"size":5059,"mtime":1612765475858,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1j74qbs",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\index.js",[],["113","114"],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\App.js",["115"],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\store.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\HomePage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ScrollToTop.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CitiesPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ItineraryPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\AdminPage.js",["116","117"],"import {Accordion, Card, Button, Modal, Table} from 'react-bootstrap'\r\nimport {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport {BiEdit, BiTrash} from 'react-icons/bi'\r\n\r\nconst AdminPage =(props)=>{\r\n    useEffect(() => {\r\n        props.getCities()\r\n    }, [])\r\n\r\n    const [newCity, setNewCity] = useState({\r\n        cityCode:\"\",\r\n        cityName:\"\",\r\n        countryName:\"\",\r\n        file:\"\",\r\n        titleSV:\"\",\r\n        streetView:\"\",\r\n        flag:\"\"\r\n    })\r\n    const [file, setFile] = useState()\r\n\r\n    const [pathImage, setPathImage]= useState('https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Icons8_flat_add_image.svg/512px-Icons8_flat_add_image.svg.png')\r\n    //capturador de los valores de los inputs\r\n    const handleChange = (e) => {\r\n          const { name, value } = e.target\r\n          setNewCity({ ...newCity,[name]: value })\r\n        }\r\n    //funcion para enviar a la base de datos \r\n    const  sendImage= e =>{\r\n        e.preventDefault()\r\n        props.newCity(newCity, file).then((result)=>\r\n        console.log(\"el resultado es: \" , result))\r\n    }\r\n    //Funcion para previsualizar imagenes\r\n    const onFileChange= e =>{\r\n        if(e.target.files && e.target.files.length > 0){\r\n            const file = e.target.files[0]\r\n            if(file.type.includes('image')){\r\n                const reader = new FileReader()\r\n                reader.readAsDataURL(file)\r\n\r\n                reader.onload= function load(){\r\n                    setPathImage(reader.result)\r\n                }\r\n                setFile(file)\r\n            }else{\r\n                console.log('tuvimos un error')\r\n            }\r\n        }\r\n    }\r\n    //controlador del modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return(\r\n        <>\r\n        <div className=\"container-fluid p-5\">\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">Mytinerary Administration</h1>\r\n                <Accordion>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            <Card.Header>\r\n                                <p className=\"m-0 h2\">Cities</p>    \r\n                            </Card.Header>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                        <form className=\"text-center\" encType=\"multipart/form-data\">\r\n                            <input type=\"text\" autocomplete=\"off\" className=\"admin_input \"\r\n                            name=\"cityCode\" onChange={(e)=>handleChange(e)} placeholder=\"Enter the city code\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"cityName\" onChange={(e)=>handleChange(e)} placeholder=\"Enter city name\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"countryName\" onChange={(e)=>handleChange(e)} placeholder=\"Enter the name of the Country\" required/>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 mx-auto\">\r\n                                        <input type=\"file\" className=\"admin_input input-file\"\r\n                                        name=\"file\" onChange={onFileChange} required/>\r\n                                        <img className=\"img-fluid img-thumbnail image\" src={pathImage} alt=\"image\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\"className=\"admin_input\"\r\n                            name=\"flag\" onChange={(e)=>handleChange(e)} placeholder=\"Enter the url of the flag\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"titleSV\" onChange={(e)=>handleChange(e)} placeholder=\"Enter Street View title\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"streetView\" onChange={(e)=>handleChange(e)} placeholder=\"Enter the Street View Url\" required/>\r\n\r\n                            <div className=\"m-3 container d-flex justify-content-around\">\r\n                                <Button variant=\"primary\" className=\"btn-mx\" type=\"submit\" onClick={sendImage}>Validate</Button>\r\n                                <Button variant=\"primary\" className=\"btn-mx\" onClick={handleShow}>View All Cities</Button>\r\n                            </div>\r\n                        </form>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                            <Card.Header>\r\n                            <p className=\"m-0 h2\">Activities</p>   \r\n                            </Card.Header> \r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                        <Card.Body className=\"d-flex flex-column justify-content-center align-items-center\">\r\n\r\n                            <select name=\"autorId\" id=\"\"  className=\"admin_input \">\r\n                                <option value=\"\" selected>Select a City</option>\r\n                                {props.cities && props.cities.map(city => {\r\n                                    return <option value={city._id}>{city.cityName}</option>\r\n                                })}\r\n                            </select>\r\n                            \r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input \"\r\n                            name=\"activityAuthorName\" placeholder=\"Author\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityAuthorPic\" placeholder=\"Pic Author\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityContact\" placeholder=\"Enter your Contact Page\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityName\" placeholder=\"Enter the name of the Activity\" required/>\r\n\r\n                            <input type=\"file\" autocomplete=\"nope\"\r\n                            name=\"activityPic\" placeholder=\"Enter of the activity image\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityDescription\" placeholder=\"Enter the description of the activity\" required/>\r\n\r\n                            <input type=\"number\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityDuration\" placeholder=\"Enter the duration of the activity\" required/>\r\n\r\n                            <input type=\"number\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityPrice\" placeholder=\"Enter the price of the activity\" required/>\r\n\r\n                            <div className=\"m-3 container d-flex justify-content-around\">\r\n                                <Button variant=\"primary\" className=\"btn-mx\">Validate</Button>\r\n                                <Button variant=\"primary\" className=\"btn-mx\">View All Activities</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                        <Card.Header>\r\n                        <p className=\"m-0 h2\">Itineraries</p>    \r\n                        </Card.Header>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"2\">\r\n                        <Card.Body>Hello! I'm another body</Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n        {/* modal para ver todas las ciudades */}\r\n        <Modal  show={show} onHide={handleClose} size=\"xl\">\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>\r\n                <p className=\"m-0 h1\">Cities</p> \r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* {Aqui se renderizan todas las ciudades} */}\r\n                <Table striped  hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"h2\">City Code</th>\r\n                            <th className=\"h2\">City</th>\r\n                            <th className=\"h2\">Country</th>\r\n                            <th className=\"h2\">Image</th>\r\n                            <th className=\"h2\">Flag</th>\r\n                            <th className=\"h2\">Edit</th>\r\n                            <th className=\"h2\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.cities.map(({cityCode,cityName,countryName,imgCity,flag,streetView,titleSV })=>{\r\n                            return (\r\n                                <>\r\n                                    <tr>\r\n                                        <td className=\"h4\">{cityCode}</td>\r\n                                        <td className=\"h4\">{cityName} </td>\r\n                                        <td className=\"h4\">{countryName}</td>\r\n                                        <td className=\"h4\">{imgCity}</td>\r\n                                        <td className=\"h4\">{flag}</td>\r\n                                        <td className=\"text-center h3\"><BiEdit/></td>\r\n                                        <td className=\"text-center h3\"><BiTrash/></td>\r\n                                    </tr>\r\n                                </>\r\n                            )\r\n\r\n                        }) }\r\n                    </tbody>\r\n                </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        {/* modal para ver todas las actividades */}\r\n       </> \r\n    ) \r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.citiesReducer.cities\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    newCity: citiesActions.newCity\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AdminPage) \r\n\r\n",["118","119"],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Login.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionHome.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Header.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Carousel.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Footer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionCities.js",["120"],"import { connect } from 'react-redux'\r\nimport {useEffect} from 'react'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\n\r\nconst SectionCities =(props)=> { \r\n    \r\n    useEffect(() => {\r\n        props.getCities()\r\n    }, [])\r\n\r\n    return  ( \r\n        <>\r\n            <section className=\"sectionC\">\r\n                <div className=\"sectionCities\">\r\n                    <p>Cities</p>\r\n                    <input type=\"text\" placeholder=\"Enjoy the experiences, find excursions and tours\" onChange={(e)=>props.filtrarCities(e.target.value)} ></input>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )           \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.citiesReducer.cities\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    filtrarCities: citiesActions.filtrarCities\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionCities)","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Cities.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionItineraries.js",["121"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport NotItineraries from \"./NotItineraries\"\r\nimport Itineraries from \"./Itineraries\";\r\n\r\n\r\n\r\nconst SectionItineraries =(props)=> { \r\n    const {cityName,countryName,flag,imgCity,streetView,titleSV} =props.city\r\n    const valor = props.activities.length\r\n     useEffect(()=>{\r\n         fetchear_data()\r\n     },[props.id])\r\n     async function fetchear_data() {\r\n        await props.getItineraries(props.id)\r\n        await props.getCity(props.id)   \r\n     }    \r\n    return  (\r\n        <>\r\n            <section className=\"sectionI\"> \r\n                <div className=\"container-fluid m-0 p-0\">\r\n                    <div className=\"row m-0 p-0\">\r\n                        <div className=\"texto_itenerary\" >\r\n                                <p>Discover the city of {cityName}, {countryName} </p>\r\n                                <img src={flag} className=\"flag\" alt={countryName}/>\r\n                        </div>\r\n                        <div className=\"col-7 foto_itenerary\" style={{backgroundImage: `url(${imgCity})`}}>\r\n                        </div>\r\n                        <div className=\"col-5  p-0\">\r\n                            <iframe src={streetView} className=\"street-view\" \r\n                            title={titleSV} allowfullscreen=\"\" aria-hidden=\"false\" ></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {valor===0 ? <NotItineraries/>:<Itineraries/>}\r\n        </>\r\n    )      \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        city:state.citiesReducer.city,\r\n        activities:state.citiesReducer.activities,\r\n        itineraries: state.citiesReducer.itineraries\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCity: citiesActions.getCity,\r\n    getItineraries: citiesActions.getItineraries\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SectionItineraries)\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CarouselFoto.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\NotItineraries.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Itineraries.js",["122"],"import { connect } from \"react-redux\"\r\nimport { Carousel, Container, Row, Button} from \"react-bootstrap\";\r\nimport Rating from '@material-ui/core/Rating';\r\nimport {BiMoney, BiHeart} from 'react-icons/bi'\r\nconst Itineraries= (props) =>{\r\n   \r\n    return(\r\n        <>\r\n            <div className=\"container-fluid d-flex flex-wrap p-0\">               \r\n                <div className=\"row justify-content-center mx-auto\">                   \r\n                   <div className=\"col-12 px-2\">\r\n                        <Container  className=\"bg-secondary mt-5 mb-3 rounded\">\r\n                            <Row className=\"justify-content-center py-3 text-white\">\r\n                                <h1 className=\"display-3\">Popular Itineraries</h1>\r\n                            </Row>\r\n                        </Container>\r\n                        {props.itineraries.map(itinerary=>{\r\n                            return(\r\n                                <>\r\n                                    <div className=\"row justify-content-center p-5 mx-auto \">\r\n                                        <div className=\"col-4\">\r\n                                        <Carousel fade={true} controls={false} indicators={false}>\r\n                                        {itinerary.itineraryActivity.map(({activityName, activityPic, index})=>(\r\n                                            <Carousel.Item>\r\n                                                <div key={index} className=\"foto_carrusel m-2\" \r\n                                                style={{backgroundImage: `url(${activityPic})`}}>\r\n                                                    <p>{activityName}</p>\r\n                                                </div>\r\n                                            </Carousel.Item>    \r\n                                                ))}\r\n                                        </Carousel>\r\n                                        </div>\r\n                                        <div className=\"col-4 p-5 d-flex flex-column border-bottom border-secondary\">\r\n                                            <div className=\"d-flex justify-content-between border-bottom align-items-center\">\r\n                                                <h1 className=\"font-weight-bold\">{itinerary.itineraryName}</h1>\r\n                                                <div>\r\n                                                    <Rating name=\"primary\" icon={<BiMoney/>} name=\"read-only\" value={itinerary.itineraryPrice} readOnly size=\"large\" emptyIcon={<BiMoney/>} />\r\n                                                    <p className=\"h5\">{`Estimated Duration ${itinerary.itineraryDuration}hs.`}</p>\r\n                                                </div>\r\n                                                <Button variant=\"secondary\" className=\"btn-mz rounded-circle\" >\r\n                                                    <BiHeart/>\r\n                                                </Button>\r\n                                            </div>\r\n                                            <p className=\"h3 mt-3\">{itinerary.itineraryDescription}</p>\r\n                                            <div className=\"d-flex\">\r\n                                                {itinerary.itineraryCategory.map(category=>{\r\n                                                   return <p className=\"h4 bg-secondary m-2 p-1 rounded text-white\">#{category}</p>})}\r\n                                            </div>\r\n                                            <Button variant=\"secondary\" className=\"btn-mz m-auto\" >\r\n                                                See all Comments\r\n                                            </Button>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                )   \r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Container  className=\"bg-secondary mt-5 mb-3 rounded\">\r\n                            <Row className=\"justify-content-center py-3 text-white\">\r\n                                <h1 className=\"display-3\">Popular Activities</h1>\r\n                            </Row>\r\n                        </Container>\r\n                        {props.activities.map(activity=>{\r\n                            return(\r\n                                <>\r\n                                    <div className=\"row justify-content-center p-5 mx-auto\">\r\n                                        <div className=\"col-4 fondo_actividad m-3\"  style={{backgroundImage: `url(${activity.activityPic})`}}>\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"col-4 m-3 pt-3\">\r\n                                            <h2 className=\"border-bottom border-secondary font-weight-bold\" >{activity.activityName}</h2>\r\n                                            <p className=\"h3 mt-3\">{activity.activityDescription}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                                )   \r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activities: state.citiesReducer.activities,\r\n        itineraries: state.citiesReducer.itineraries\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Itineraries)","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Terms.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\LoginPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Register.js",["123"],"import GoogleLogin from 'react-google-login'\r\nimport {Button} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport {useEffect, useState} from 'react'\r\n\r\n\r\nconst Register =(props)=>{\r\n    const responseGoogle = (response) => {\r\n        props.loginWithGoogle(response.profileObj);\r\n      }\r\n    useEffect(() => {\r\n        props.getCountries()\r\n    }, [])\r\n    //Usuario a cargar en la db\r\n    var [newUser, setNewUser] = useState({\r\n        name:\"\",\r\n        lastName:\"\",\r\n        username:\"\",\r\n        password:\"\",\r\n        country:\"\"\r\n    })\r\n    //capturador de los valores de los inputs \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setNewUser({ ...newUser,[name]: value })\r\n      }\r\n\r\n    const [pathImage, setPathImage]= useState('/assets/avatar.png')\r\n    const [file, setFile] = useState()\r\n    //Funcion para previsualizar imagenes\r\n    const onFileChange= e =>{\r\n        if(e.target.files && e.target.files.length > 0){\r\n            const file = e.target.files[0]\r\n            if(file.type.includes('image')){\r\n                const reader = new FileReader()\r\n                reader.readAsDataURL(file)\r\n\r\n                reader.onload= function load(){\r\n                    setPathImage(reader.result)\r\n                }\r\n                setFile(file)\r\n            }else{\r\n                console.log('tuvimos un error')\r\n            }\r\n        }\r\n    }\r\n    //Funcion para enviar la informacion a la db\r\n    const  sendUser= e =>{\r\n            e.preventDefault()\r\n            props.newUser(newUser, file)\r\n        }\r\n    return(\r\n        <>\r\n            <h1>Register</h1>\r\n            <GoogleLogin \r\n                className=\"login_input justify-content-center\"\r\n                clientId=\"759756529264-mj8c1nc0j1f5ot1jqt4bm91hv3ogo4u1.apps.googleusercontent.com\"\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <div className=\"separator-line\">\r\n                <span className=\"text\">Or register with your email</span>\r\n                <span className=\"line mx-auto\"></span> \r\n            </div>\r\n            <input type=\"text\" autocomplete=\"nope\" placeholder=\"Name\" name=\"name\" \r\n            onChange={(e)=>handleChange(e)} className=\"admin_input\" required/>\r\n            <input type=\"text\" autocomplete=\"nope\" placeholder=\"Last Name\" name=\"lastName\"\r\n            onChange={(e)=>handleChange(e)} className=\"admin_input\" required/>\r\n            <input type=\"text\" autocomplete=\"nope\" placeholder=\"Your email address\" name=\"username\"\r\n            onChange={(e)=>handleChange(e)}  className=\"admin_input\" required/>\r\n            <select name=\"country\" onChange={(e)=>handleChange(e)} className=\"admin_input p-1\">\r\n                <option value=\"\" className=\"admin_input\" selected>Select your Country</option>\r\n                {props.countries && props.countries.map(country => {\r\n                    return <option className=\"option-select\" value={country.name}>{country.name}</option>\r\n                })}\r\n            </select>\r\n            <input type=\"password\" placeholder=\"Password for Mytinerary\" name=\"password\"\r\n            onChange={(e)=>handleChange(e)} className=\"admin_input\" required/>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <span  data-toggle=\"tooltip\" data-placement=\"left\" title=\"At least 6 characters (cannot include spaces or special characters / %)\">(?)</span>\r\n                <p> The password must be at least 6 characters.</p>\r\n            </div>\r\n            <label for=\"profile-pic\" className=\"label_input_file\" >\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                <p>Select your Profile picture</p> \r\n                    <img className=\"img-fluid profile-pic-register\" src={pathImage} alt=\"profile-pic\"/>\r\n                </div>\r\n            </label>\r\n            <input type=\"file\" id=\"profile-pic\" className=\"admin_input input-file\"\r\n            name=\"file\" onChange={onFileChange} required/>\r\n            <Button variant=\"secondary\" className=\"admin_input mx-auto\"\r\n            type=\"submit\" onClick={sendUser} >\r\n                Register\r\n            </Button>\r\n            <p>* By entering with Google you are agreeing to receive offers by email</p>\r\n            <div className=\"separator-line\">\r\n                <span>Do you already have an account?</span>\r\n                <span className=\"line mx-auto\"></span> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countries: state.authReducer.countries,\r\n        loggedUser: state.authReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    getCountries: authActions.getCountries,\r\n    newUser: authActions.newUser,\r\n    loginWithGoogle: authActions.loginWithGoogle,\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Register) \r\n",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":33,"column":9,"nodeType":"130","messageId":"131","endLine":33,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":10,"column":8,"nodeType":"134","endLine":10,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":85,"column":41,"nodeType":"138","endLine":85,"endColumn":117},{"ruleId":"124","replacedBy":"139"},{"ruleId":"126","replacedBy":"140"},{"ruleId":"132","severity":1,"message":"133","line":9,"column":8,"nodeType":"134","endLine":9,"endColumn":10,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"142","line":14,"column":8,"nodeType":"134","endLine":14,"endColumn":18,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":37,"column":94,"nodeType":"146","endLine":37,"endColumn":110},{"ruleId":"132","severity":1,"message":"133","line":14,"column":8,"nodeType":"134","endLine":14,"endColumn":10,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-redeclare","'routes' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["150"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["148"],["149"],["151"],"React Hook useEffect has a missing dependency: 'fetchear_data'. Either include it or remove the dependency array.",["152"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"157","fix":"158"},{"desc":"154","fix":"159"},"Update the dependencies array to be: [props]",{"range":"160","text":"161"},{"range":"162","text":"161"},"Update the dependencies array to be: [fetchear_data, props.id]",{"range":"163","text":"164"},{"range":"165","text":"161"},[350,352],"[props]",[233,235],[447,457],"[fetchear_data, props.id]",[422,424]]