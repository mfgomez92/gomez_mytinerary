[{"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\store.js":"3","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ItineraryPage.js":"4","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\HomePage.js":"5","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\LoginPage.js":"6","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ScrollToTop.js":"7","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CitiesPage.js":"8","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Terms.js":"9","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\authActions.js":"10","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js":"11","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js":"12","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionItineraries.js":"13","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Header.js":"14","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Footer.js":"15","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionHome.js":"16","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Carousel.js":"17","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Register.js":"18","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Login.js":"19","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionCities.js":"20","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Cities.js":"21","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\NotItineraries.js":"22","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js":"23","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Itineraries.js":"24","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CarouselFoto.js":"25","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Itinerary.js":"26"},{"size":326,"mtime":1611702346905,"results":"27","hashOfConfig":"28"},{"size":1978,"mtime":1612882952527,"results":"29","hashOfConfig":"28"},{"size":369,"mtime":1612553026728,"results":"30","hashOfConfig":"28"},{"size":1023,"mtime":1612069032011,"results":"31","hashOfConfig":"28"},{"size":2385,"mtime":1611495397295,"results":"32","hashOfConfig":"28"},{"size":2345,"mtime":1612903651083,"results":"33","hashOfConfig":"28"},{"size":374,"mtime":1611498948271,"results":"34","hashOfConfig":"28"},{"size":784,"mtime":1611825186177,"results":"35","hashOfConfig":"28"},{"size":559,"mtime":1612588743185,"results":"36","hashOfConfig":"28"},{"size":3250,"mtime":1612912172441,"results":"37","hashOfConfig":"28"},{"size":903,"mtime":1612741380047,"results":"38","hashOfConfig":"28"},{"size":1442,"mtime":1612165302720,"results":"39","hashOfConfig":"28"},{"size":2027,"mtime":1612174891387,"results":"40","hashOfConfig":"28"},{"size":4525,"mtime":1612920250485,"results":"41","hashOfConfig":"28"},{"size":687,"mtime":1611497410344,"results":"42","hashOfConfig":"28"},{"size":702,"mtime":1611574784254,"results":"43","hashOfConfig":"28"},{"size":704,"mtime":1612160091488,"results":"44","hashOfConfig":"28"},{"size":7059,"mtime":1612865462395,"results":"45","hashOfConfig":"28"},{"size":3271,"mtime":1612908458798,"results":"46","hashOfConfig":"28"},{"size":947,"mtime":1612068097301,"results":"47","hashOfConfig":"28"},{"size":1537,"mtime":1612065415961,"results":"48","hashOfConfig":"28"},{"size":617,"mtime":1612159722788,"results":"49","hashOfConfig":"28"},{"size":1912,"mtime":1612684664352,"results":"50","hashOfConfig":"28"},{"size":2575,"mtime":1612926593658,"results":"51","hashOfConfig":"28"},{"size":393,"mtime":1611181573299,"results":"52","hashOfConfig":"28"},{"size":2507,"mtime":1612927304998,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1j74qbs",{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\index.js",[],["113","114"],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\App.js",["115","116"],"import HomePage from './componentes/HomePage'\nimport CitiesPage from './componentes/CitiesPage'\nimport ItineraryPage from './componentes/ItineraryPage';\nimport ScrollToTop from './componentes/ScrollToTop'\nimport LoginPage from './componentes/LoginPage';\nimport Terms from './componentes/Terms';\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport {connect} from 'react-redux'\nimport authActions from './redux/actions/authActions'\nimport React, { useState } from 'react'\n\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App(props) {\n  const [reload, setReload] = useState(false)\n  console.log(props.loggedUser)\n  if (props.loggedUser) {\n    var routes = <>\n        {console.log(\"if\")}\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/cities\" component={CitiesPage} />\n        <Route path=\"/cities/:city\" component={ItineraryPage} />\n        <Redirect to=\"/\" />\n    </>\n  } else if (localStorage.getItem('token')) { \n    {console.log(\"else if\")}\n\n      props.logFromLS(localStorage.getItem('token'))\n      .then(respuesta => {\n        if (respuesta === '/') setReload(!reload)\n        console.log(respuesta) \n      })\n  } else {\n    var routes = <>\n            {console.log(\"else\")}\n\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/cities\" component={CitiesPage} />\n      <Route path=\"/cities/:city\" component={ItineraryPage} />\n      <Route path=\"/login\" component={LoginPage}/>\n      <Route path=\"/terms-conditions\" component={Terms}/>\n      <Redirect to=\"/\" />\n    </>\n  }    \n  return (\n <>\n    <Router>\n      <ScrollToTop>  \n        <Switch>\n    \n        {routes}\n        </Switch>\n      </ScrollToTop>  \n    </Router>\n  </>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedUser: state.authReducer.loggedUser\n  }\n}\n\nconst mapDispatchToProps = {\n  logFromLS: authActions.logFromLS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\store.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ItineraryPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\HomePage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\LoginPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ScrollToTop.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CitiesPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Terms.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\authActions.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionItineraries.js",["117"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport NotItineraries from \"./NotItineraries\"\r\nimport Itineraries from \"./Itineraries\";\r\n\r\n\r\n\r\nconst SectionItineraries =(props)=> { \r\n    const {cityName,countryName,flag,imgCity,streetView,titleSV} =props.city\r\n    const valor = props.activities.length\r\n     useEffect(()=>{\r\n         fetchear_data()\r\n     },[props.id])\r\n     async function fetchear_data() {\r\n        await props.getItineraries(props.id)\r\n        await props.getCity(props.id)   \r\n     }    \r\n    return  (\r\n        <>\r\n            <section className=\"sectionI\"> \r\n                <div className=\"container-fluid m-0 p-0\">\r\n                    <div className=\"row m-0 p-0\">\r\n                        <div className=\"texto_itenerary\" >\r\n                                <p>Discover the city of {cityName}, {countryName} </p>\r\n                                <img src={flag} className=\"flag\" alt={countryName}/>\r\n                        </div>\r\n                        <div className=\"col-7 foto_itenerary\" style={{backgroundImage: `url(${imgCity})`}}>\r\n                        </div>\r\n                        <div className=\"col-5  p-0\">\r\n                            <iframe src={streetView} className=\"street-view\" \r\n                            title={titleSV} allowfullscreen=\"\" aria-hidden=\"false\" ></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {valor===0 ? <NotItineraries/>:<Itineraries/>}\r\n        </>\r\n    )      \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        city:state.citiesReducer.city,\r\n        activities:state.citiesReducer.activities,\r\n        itineraries: state.citiesReducer.itineraries\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCity: citiesActions.getCity,\r\n    getItineraries: citiesActions.getItineraries\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SectionItineraries)\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Header.js",["118","119"],"import { IconContext } from \"react-icons\"\r\nimport {BiUserCircle, BiHome, BiWorld} from 'react-icons/bi'\r\nimport {NavLink, Link} from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport React, { useState } from 'react'\r\nimport authActions from '../redux/actions/authActions'\r\n\r\n\r\nconst Header=(props)=>{\r\n    const despliegue = ()=>{\r\n        document.querySelector('#menu_hamburguesa').classList.toggle('active') \r\n        document.querySelector('#mainListDiv').classList.toggle('show_list') \r\n    } \r\n    //Arreglar\r\n    // window.onscroll = ()=> {\r\n    //     window.scrollY > 100? \r\n    //         document.querySelector('.nav').classList.add('affix'):\r\n    //         document.querySelector('.nav').classList.remove('affix')\r\n    //   };\r\n    const [show, setShow] = useState(true);\r\n    if (props.loggedUser===null){\r\n        var links= <> \r\n                    <NavLink to=\"/login\"  className=\"nav-link\">\r\n                        <IconContext.Provider value={{size:'1.25em'}}>\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <BiUserCircle/><div>Login</div>\r\n                            </div>\r\n                        </IconContext.Provider>\r\n                    </NavLink>\r\n                    </>\r\n    }else{\r\n    var links=    \r\n        <>\r\n            <Link  className=\"nav-link d-flex align-items-center\">\r\n                <img src={props.loggedUser.profilePicture} className=\"rounded-circle  mr-3\"\r\n                        style={{height: \"40px\", width:\"40px\"}}/>\r\n                <div className=\"container\">\r\n                    <div type=\"button\" className=\"dropdown-toggle d-block\" onClick={()=>{setShow(!show);}}>\r\n                        {props.loggedUser.name}\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            {!show&&\r\n                    <ul className=\"d-flex flex-column dropdown-header rounded\">\r\n                        <li className=\"item-drop h3 p-2\" >Profile</li>\r\n                        <li className=\"item-drop h3 p-2\" >Mytineraries</li>\r\n                        <li className=\"item-drop h3 p-2\" type=\"button\" onClick={()=>props.logoutUser()} >LogOut</li>\r\n                    </ul>}\r\n        </>\r\n    }\r\n    return(\r\n        <>\r\n            <nav className=\"nav\" >\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"logo\">\r\n                        <NavLink to=\"/\" className=\"navbar-brand\">\r\n                            <img  alt=\"logo\" src=\"/assets/Mytinerary-logo.png\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div id=\"mainListDiv\" className=\"main_list\">\r\n                        <ul className=\"navlinks\">\r\n                            <li>\r\n                                <NavLink to=\"/\" className=\"nav-link\">\r\n                                    <IconContext.Provider value={{size:'1.25em'}}>\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <BiHome/><div>Home</div>\r\n                                        </div>\r\n                                    </IconContext.Provider>\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                <NavLink to=\"/cities\" className=\"nav-link\">\r\n                                    <IconContext.Provider value={{size:'1.25em'}}>\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <BiWorld/><div>Cities</div>\r\n                                        </div>\r\n                                    </IconContext.Provider>\r\n                                </NavLink>\r\n                            </li>\r\n                            <li>\r\n                                {links}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <span className=\"navTrigger\" id=\"menu_hamburguesa\" onClick={despliegue}>\r\n                        <i></i>\r\n                        <i></i>\r\n                        <i></i>\r\n                    </span>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.authReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logoutUser: authActions.logoutUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Footer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionHome.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Carousel.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Register.js",["120","121","122","123","124"],"import GoogleLogin from 'react-google-login'\r\nimport {Button} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport {useEffect, useState} from 'react'\r\nimport swal from 'sweetalert2'\r\n\r\nconst Register =(props)=>{\r\n    const responseGoogle = (response) => {\r\n        props.loginWithGoogle(response.profileObj);\r\n      }\r\n    useEffect(() => {\r\n        props.getCountries()\r\n    }, [])\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0)\r\n    })\r\n    //Usuario a cargar en la db\r\n    var [newUser, setNewUser] = useState({\r\n        name:\"\",\r\n        lastName:\"\",\r\n        username:\"\",\r\n        password:\"\",\r\n        country:\"\"\r\n    })\r\n    //Errores\r\n    const [errores, setErrores] = useState([])\r\n    //capturador de los valores de los inputs \r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setNewUser({ ...newUser,[name]: value })\r\n      }\r\n\r\n    const [pathImage, setPathImage]= useState('/assets/avatar.png')\r\n    const [file, setFile] = useState()\r\n    //Funcion para previsualizar imagenes\r\n    const onFileChange= e =>{\r\n        if(e.target.files && e.target.files.length > 0){\r\n            const file = e.target.files[0]\r\n            if(file.type.includes('image')){\r\n                const reader = new FileReader()\r\n                reader.readAsDataURL(file)\r\n\r\n                reader.onload= function load(){\r\n                    setPathImage(reader.result)\r\n                }\r\n                setFile(file)\r\n            }else{\r\n                console.log('tuvimos un error')\r\n            }\r\n        }\r\n    }\r\n    //Funcion para enviar la informacion del formulario de registro a la db\r\n    const  sendUser= async e =>{\r\n            e.preventDefault()\r\n            if (newUser.name === '' || newUser.lastName === '' || newUser.username === ''\r\n            || newUser.password=== ''|| newUser.country === '') {\r\n                swal.fire(\"Fill in all fields\")\r\n                return false\r\n                }else if(file ===undefined){\r\n                    swal.fire(\"Select a Profile Picture\")\r\n                    return false\r\n                }\r\n            setErrores([])\r\n            const respuesta = await props.newUser(newUser, file)\r\n            if (respuesta && !respuesta.success) {\r\n                setErrores(respuesta.errores)\r\n            } else {\r\n                swal.fire(\"Good Job!\",\"You have Registered in Mytinerary\", 'success')\r\n            }\r\n        }\r\n        \r\n    return(\r\n        <>\r\n            <h1>Register</h1>\r\n            <GoogleLogin \r\n                className=\"login_input justify-content-center\"\r\n                clientId=\"759756529264-mj8c1nc0j1f5ot1jqt4bm91hv3ogo4u1.apps.googleusercontent.com\"\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <div className=\"separator-line\">\r\n                <span className=\"text\">Or register with your email</span>\r\n                <span className=\"line mx-auto\"></span> \r\n            </div>\r\n            <input type=\"text\" autoComplete=\"nope\" placeholder=\"Name\" name=\"name\" \r\n            onChange={(e)=>handleChange(e)} className=\"admin_input\" required/>\r\n            <div className=\"errores\">\r\n                {errores && errores.map(({path})=>{\r\n                    if(path[0]===\"name\"){\r\n                        return <p>The Name must be at least 4 characters up to 15 characters</p>\r\n                    }\r\n                })}\r\n            </div>\r\n            <input type=\"text\" autoComplete=\"nope\" placeholder=\"Last Name\" name=\"lastName\"\r\n            onChange={(e)=>handleChange(e)} className=\"admin_input\" required/>\r\n            <div className=\"errores\">\r\n                {errores && errores.map(({path})=>{\r\n                    if(path[0]===\"lastName\"){\r\n                        return <p>The Name must be at least 2 characters up to 20 characters</p>\r\n                    }\r\n                })}\r\n            </div>\r\n            <input type=\"text\" autoComplete=\"nope\" placeholder=\"Your email address\" name=\"username\"\r\n            onChange={(e)=>handleChange(e)}  className=\"admin_input\" required/>\r\n            <div className=\"errores\">\r\n                {errores && errores.map(({path})=>{\r\n                    if(path[0]===\"username\"){\r\n                        return <p>Enter a valid email address</p>\r\n                    }else if(path[0]===\"usernameExist\"){\r\n                        return <p>The email is already in use. Choose another.</p>\r\n                    }\r\n                    \r\n                })}\r\n            </div>\r\n            <select name=\"country\" onChange={(e)=>handleChange(e)} className=\"admin_input p-1\">\r\n                <option defaultValue className=\"admin_input\" >Select your Country</option>\r\n                {props.countries && props.countries.map(country => {\r\n                    return <option className=\"option-select\" value={country.name}>{country.name}</option>\r\n                })}\r\n            </select>\r\n            <input type=\"password\" placeholder=\"Password for Mytinerary\" name=\"password\"\r\n            onChange={(e)=>handleChange(e)} className=\"admin_input\" required/>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <p>The password must be 6-8 characters long.</p>\r\n            </div>\r\n            <div className=\"errores\">\r\n                {errores && errores.map(({path})=>{\r\n                    if(path[0]===\"password\"){\r\n                        return <p>Enter a Valid Password</p>\r\n                    }\r\n                })}\r\n            </div>\r\n            <label htmlFor=\"profile-pic\" className=\"label_input_file\" >\r\n                <div className=\"d-flex flex-column align-items-center\">\r\n                <p>Select your Profile picture</p> \r\n                    <img className=\"img-fluid profile-pic-register\" src={pathImage} alt=\"profile-pic\"/>\r\n                </div>\r\n            </label>\r\n            <input type=\"file\" id=\"profile-pic\" className=\"admin_input input-file\"\r\n            name=\"file\" onChange={onFileChange} required/>\r\n            <Button variant=\"secondary\" className=\"admin_input mx-auto\"\r\n            type=\"submit\" onClick={sendUser} >\r\n                Register\r\n            </Button>\r\n            <p>* By entering with Google you are agreeing to receive offers by email</p>\r\n            <div className=\"separator-line\">\r\n                <span>Do you already have an account?</span>\r\n                <span className=\"line mx-auto\"></span> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countries: state.authReducer.countries,\r\n        loggedUser: state.authReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    getCountries: authActions.getCountries,\r\n    newUser: authActions.newUser,\r\n    loginWithGoogle: authActions.loginWithGoogle,\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Register) \r\n","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Login.js",["125","126"],"import GoogleLogin from 'react-google-login';\r\nimport {Button} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport authActions from \"../redux/actions/authActions\"\r\nimport {useEffect, useState} from 'react'\r\nimport swal from 'sweetalert2'\r\n\r\n\r\nconst Login=(props)=>{\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0)\r\n    })\r\n    const responseGoogle = async (response) => {\r\n       const respuesta = await props.loginWithGoogle(response.profileObj)      \r\n      }\r\n    //Usuario a loguearse\r\n    var [loginUser, setLoginUser] = useState({\r\n        username:\"\",\r\n        password:\"\",\r\n    })\r\n    //Errores\r\n    const [errores, setErrores] = useState([])\r\n    //capturo valores de los inputs\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target\r\n        setLoginUser({ ...loginUser,[name]: value })\r\n      }\r\n    //Funcion para confirmar el login\r\n    const  sendUser= async e =>{\r\n        e.preventDefault()       \r\n        if (loginUser.username === '' || loginUser.password === '') {\r\n            swal.fire(\"All fields are required\")\r\n            return false\r\n        }\r\n        setErrores([])\r\n        const respuesta = await props.loginUser(loginUser)\r\n        if (respuesta && !respuesta.success) {\r\n            setErrores([respuesta.mensaje])\r\n        } else {\r\n            swal.fire({\r\n                position: 'top-end',\r\n                icon: 'success',\r\n                title: 'Welcome to Mytinerary',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n              })\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <h1>Login</h1>\r\n            <GoogleLogin\r\n                className=\"login_input justify-content-center\"\r\n                clientId=\"759756529264-mj8c1nc0j1f5ot1jqt4bm91hv3ogo4u1.apps.googleusercontent.com\"\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <div className=\"separator-line\">\r\n                <span>Or</span> \r\n                <span className=\"line mx-auto\"></span> \r\n            </div>\r\n            <input type=\"text\" autocomplete=\"nope\" placeholder=\"Your email address\" className=\"admin_input\" name=\"username\"\r\n            onChange={(e)=>handleChange(e)}/>\r\n            <input type=\"password\" placeholder=\"Password for Mytinerary\" className=\"admin_input\" name=\"password\"\r\n            onChange={(e)=>handleChange(e)} />\r\n \r\n            <Button variant=\"secondary\" className=\"admin_input mx-auto mt-4\" type=\"submit\" onClick={sendUser} >\r\n                Login\r\n            </Button>\r\n            <p>* By entering with Google you are agreeing to receive offers by email</p>\r\n            <div className=\"separator-line\">\r\n                <span>You do not have an account?</span>\r\n                <span className=\"line mx-auto\"></span> \r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.authReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loginWithGoogle: authActions.loginWithGoogle,\r\n    loginUser: authActions.loginUser,\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login) ","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionCities.js",["127"],"import { connect } from 'react-redux'\r\nimport {useEffect} from 'react'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\n\r\nconst SectionCities =(props)=> { \r\n    \r\n    useEffect(() => {\r\n        props.getCities()\r\n    }, [])\r\n\r\n    return  ( \r\n        <>\r\n            <section className=\"sectionC\">\r\n                <div className=\"sectionCities\">\r\n                    <p>Cities</p>\r\n                    <input type=\"text\" placeholder=\"Enjoy the experiences, find excursions and tours\" onChange={(e)=>props.filtrarCities(e.target.value)} ></input>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )           \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.citiesReducer.cities\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    filtrarCities: citiesActions.filtrarCities\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionCities)","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Cities.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\NotItineraries.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Itineraries.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CarouselFoto.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Itinerary.js",["128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":29,"column":5,"nodeType":"135","messageId":"136","endLine":29,"endColumn":29},{"ruleId":"137","severity":1,"message":"138","line":37,"column":9,"nodeType":"139","messageId":"140","endLine":37,"endColumn":15},{"ruleId":"141","severity":1,"message":"142","line":14,"column":8,"nodeType":"143","endLine":14,"endColumn":18,"suggestions":"144"},{"ruleId":"137","severity":1,"message":"145","line":32,"column":9,"nodeType":"139","messageId":"140","endLine":32,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":35,"column":17,"nodeType":"148","endLine":36,"endColumn":65},{"ruleId":"141","severity":1,"message":"149","line":14,"column":8,"nodeType":"143","endLine":14,"endColumn":10,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":91,"column":49,"nodeType":"153","messageId":"154","endLine":91,"endColumn":51},{"ruleId":"151","severity":1,"message":"152","line":100,"column":49,"nodeType":"153","messageId":"154","endLine":100,"endColumn":51},{"ruleId":"151","severity":1,"message":"152","line":109,"column":49,"nodeType":"153","messageId":"154","endLine":109,"endColumn":51},{"ruleId":"151","severity":1,"message":"152","line":130,"column":49,"nodeType":"153","messageId":"154","endLine":130,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":14,"column":14,"nodeType":"139","messageId":"157","endLine":14,"endColumn":23},{"ruleId":"155","severity":1,"message":"158","line":22,"column":12,"nodeType":"139","messageId":"157","endLine":22,"endColumn":19},{"ruleId":"141","severity":1,"message":"149","line":9,"column":8,"nodeType":"143","endLine":9,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":29,"column":62,"nodeType":"162","endLine":29,"endColumn":78},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-redeclare","'routes' is already defined.","Identifier","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchear_data'. Either include it or remove the dependency array.","ArrayExpression",["165"],"'links' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["166"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'respuesta' is assigned a value but never used.","unusedVar","'errores' is assigned a value but never used.",["167"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},"Update the dependencies array to be: [fetchear_data, props.id]",{"range":"173","text":"174"},"Update the dependencies array to be: [props]",{"range":"175","text":"176"},{"range":"177","text":"176"},[447,457],"[fetchear_data, props.id]",[452,454],"[props]",[233,235]]