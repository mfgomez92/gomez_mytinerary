[{"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\index.js":"1","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\App.js":"2","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\store.js":"3","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\HomePage.js":"4","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ScrollToTop.js":"5","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ItineraryPage.js":"6","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CitiesPage.js":"7","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\AdminPage.js":"8","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js":"9","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Footer.js":"10","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionHome.js":"11","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Header.js":"12","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Carousel.js":"13","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionItineraries.js":"14","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionCities.js":"15","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Cities.js":"16","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js":"17","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CarouselFoto.js":"18"},{"size":326,"mtime":1611702346905,"results":"19","hashOfConfig":"20"},{"size":819,"mtime":1611847394963,"results":"21","hashOfConfig":"20"},{"size":301,"mtime":1611879439139,"results":"22","hashOfConfig":"20"},{"size":2385,"mtime":1611495397295,"results":"23","hashOfConfig":"20"},{"size":374,"mtime":1611498948271,"results":"24","hashOfConfig":"20"},{"size":1023,"mtime":1612069032011,"results":"25","hashOfConfig":"20"},{"size":784,"mtime":1611825186177,"results":"26","hashOfConfig":"20"},{"size":9819,"mtime":1612142442030,"results":"27","hashOfConfig":"20"},{"size":1404,"mtime":1612157711322,"results":"28","hashOfConfig":"20"},{"size":687,"mtime":1611497410344,"results":"29","hashOfConfig":"20"},{"size":702,"mtime":1611574784254,"results":"30","hashOfConfig":"20"},{"size":3059,"mtime":1611573477450,"results":"31","hashOfConfig":"20"},{"size":706,"mtime":1611181204595,"results":"32","hashOfConfig":"20"},{"size":2255,"mtime":1612157737452,"results":"33","hashOfConfig":"20"},{"size":947,"mtime":1612068097301,"results":"34","hashOfConfig":"20"},{"size":1537,"mtime":1612065415961,"results":"35","hashOfConfig":"20"},{"size":1759,"mtime":1612157604871,"results":"36","hashOfConfig":"20"},{"size":393,"mtime":1611181573299,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1j74qbs",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\index.js",[],["79","80"],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\App.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\store.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\HomePage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ScrollToTop.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\ItineraryPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CitiesPage.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\AdminPage.js",["81"],"import {Accordion, Card, Button, Modal, Table} from 'react-bootstrap'\r\nimport {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\nimport {BiEdit, BiTrash} from 'react-icons/bi'\r\n\r\nconst AdminPage =(props)=>{\r\n    useEffect(() => {\r\n        props.getCities()\r\n    }, [])\r\n\r\n    const [nuevaCiudad, setNuevaCiudad] = useState({\r\n        cityCode:\"\",\r\n        cityName:\"\",\r\n        countryName:\"\",\r\n        imgCity:\"\",\r\n        titleSV:\"\",\r\n        streetView:\"\",\r\n        flag:\"\"\r\n    })\r\n    const readInput = (e) => {\r\n        console.log(e.target)\r\n        const property = e.target.name\r\n        const value = e.target.value\r\n        setNuevaCiudad({\r\n            ...nuevaCiudad,\r\n            [property]: value\r\n        })\r\n    }\r\n    const enviarInfo = e => {\r\n        e.preventDefault()\r\n        props.newCity(nuevaCiudad)\r\n    }\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n  \r\n    return(\r\n        <>\r\n        <div className=\"container-fluid p-5\">\r\n            <div className=\"container\">\r\n                <h1 className=\"text-center\">Mytinerary Administration</h1>\r\n                <Accordion>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            <Card.Header>\r\n                                <p className=\"m-0 h2\">Cities</p>    \r\n                            </Card.Header>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                            <input type=\"text\" autocomplete=\"off\" className=\"admin_input \"\r\n                            name=\"cityCode\" onChange={(e)=>readInput(e)} placeholder=\"Enter the city code\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"cityName\" onChange={(e)=>readInput(e)} placeholder=\"Enter city name\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"countryName\" onChange={(e)=>readInput(e)} placeholder=\"Enter the name of the Country\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"imgCity\" onChange={(e)=>readInput(e)} placeholder=\"Enter the url of the Image\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\"className=\"admin_input\"\r\n                            name=\"flag\" onChange={(e)=>readInput(e)} placeholder=\"Enter the url of the flag\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"titleSV\" onChange={(e)=>readInput(e)} placeholder=\"Enter Street View title\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"streetView\" onChange={(e)=>readInput(e)} placeholder=\"Enter the Street View Url\" required/>\r\n                            <div className=\"m-3 container d-flex justify-content-around\">\r\n                                <Button variant=\"primary\" className=\"btn-mx\" onClick={enviarInfo}>Validate</Button>\r\n                                <Button variant=\"primary\" className=\"btn-mx\" onClick={handleShow}>View All Cities</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                            <Card.Header>\r\n                            <p className=\"m-0 h2\">Activities</p>   \r\n                            </Card.Header> \r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                        <Card.Body className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                            <select name=\"autorId\" id=\"\"  className=\"admin_input \">\r\n                                <option value=\"\" selected>Select a City</option>\r\n                                {props.cities && props.cities.map(city => {\r\n                                    return <option value={city._id}>{city.cityName}</option>\r\n                                })}\r\n                            </select>\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input \"\r\n                            name=\"activityAuthorName\" placeholder=\"Author\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityAuthorPic\" placeholder=\"Pic Author\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityContact\" placeholder=\"Enter your Contact Page\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityName\" placeholder=\"Enter the name of the Activity\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\"className=\"admin_input\"\r\n                            name=\"activityPic\" placeholder=\"Enter the url of the activity image\" required/>\r\n\r\n                            <input type=\"text\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityDescription\" placeholder=\"Enter the description of the activity\" required/>\r\n\r\n                            <input type=\"number\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityDuration\" placeholder=\"Enter the duration of the activity\" required/>\r\n\r\n                            <input type=\"number\" autocomplete=\"nope\" className=\"admin_input\"\r\n                            name=\"activityPrice\" placeholder=\"Enter the price of the activity\" required/>\r\n\r\n                            <div className=\"m-3 container d-flex justify-content-around\">\r\n                                <Button variant=\"primary\" className=\"btn-mx\">Validate</Button>\r\n                                <Button variant=\"primary\" className=\"btn-mx\">View All Activities</Button>\r\n                            </div>\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n                        <Card.Header>\r\n                        <p className=\"m-0 h2\">Itineraries</p>    \r\n                        </Card.Header>\r\n                        </Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"2\">\r\n                        <Card.Body>Hello! I'm another body</Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n        {/* modal para ver todas las ciudades */}\r\n        <Modal  show={show} onHide={handleClose} size=\"xl\">\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>\r\n                <p className=\"m-0 h1\">Cities</p> \r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* {Aqui se renderizan todas las ciudades} */}\r\n                <Table striped  hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"h2\">City Code</th>\r\n                            <th className=\"h2\">City</th>\r\n                            <th className=\"h2\">Country</th>\r\n                            <th className=\"h2\">Image</th>\r\n                            <th className=\"h2\">Flag</th>\r\n                            <th className=\"h2\">Edit</th>\r\n                            <th className=\"h2\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.cities.map(({cityCode,cityName,countryName,imgCity,flag,streetView,titleSV })=>{\r\n                            return (\r\n                                <>\r\n                                    <tr>\r\n                                        <td className=\"h4\">{cityCode}</td>\r\n                                        <td className=\"h4\">{cityName} </td>\r\n                                        <td className=\"h4\">{countryName}</td>\r\n                                        <td className=\"h4\">{imgCity}</td>\r\n                                        <td className=\"h4\">{flag}</td>\r\n                                        <td className=\"text-center h3\"><BiEdit/></td>\r\n                                        <td className=\"text-center h3\"><BiTrash/></td>\r\n                                    </tr>\r\n                                </>\r\n                            )\r\n\r\n                        }) }\r\n                    </tbody>\r\n                </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        {/* modal para ver todas las actividades */}\r\n       </> \r\n    ) \r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.citiesReducer.cities\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    newCity: citiesActions.newCity\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AdminPage) \r\n\r\n","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\reducers\\citiesReducer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Footer.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionHome.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Header.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Carousel.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionItineraries.js",["82"],"import { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\n\r\n\r\nconst SectionItineraries =(props)=> { \r\n    const {cityName,countryName,flag,imgCity,streetView,titleSV} =props.city\r\n    const notItinerary=\"/assets/not-itinerary.jpg\"\r\n     useEffect(()=>{\r\n         props.getCity(props.id)\r\n         props.getItineraries(props.id)\r\n     },[])\r\n  \r\n    console.log(props)\r\n    return  (\r\n        <>\r\n            <section className=\"sectionI\"> \r\n                <div className=\"container-fluid m-0 p-0\">\r\n                    <div className=\"row m-0 p-0\">\r\n                        <div className=\"texto_itenerary\" >\r\n                                <p>Discover the city of {cityName}, {countryName} </p>\r\n                                <img src={flag} className=\"flag\" alt={countryName}/>\r\n                        </div>\r\n                        <div className=\"col-7 foto_itenerary\" style={{backgroundImage: `url(${imgCity})`}}>\r\n                        </div>\r\n                        <div className=\"col-5  p-0\">\r\n                            <iframe src={streetView} className=\"street-view\" \r\n                            title={titleSV} allowfullscreen=\"\" aria-hidden=\"false\" ></iframe>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <div className=\"container-fluid d-flex flex-wrap\">               \r\n                    <div className=\"row justify-content-center pt-3 mx-auto\">\r\n                        <div key={notItinerary} className=\"col-5  foto_not_found m-3\" style={{backgroundImage: `url(${notItinerary})`}}>\r\n                            <p>New itineraries Coming Soon</p>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </>\r\n    )      \r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        city:state.citiesReducer.city,\r\n        activities:state.citiesReducer.activities,\r\n        itineraries: state.citiesReducer.itineraries\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCity: citiesActions.getCity,\r\n    getItineraries: citiesActions.getItineraries\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SectionItineraries)\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\SectionCities.js",["83"],"import { connect } from 'react-redux'\r\nimport {useEffect} from 'react'\r\nimport citiesActions from \"../redux/actions/citiesActions\";\r\n\r\nconst SectionCities =(props)=> { \r\n    \r\n    useEffect(() => {\r\n        props.getCities()\r\n    }, [])\r\n\r\n    return  ( \r\n        <>\r\n            <section className=\"sectionC\">\r\n                <div className=\"sectionCities\">\r\n                    <p>Cities</p>\r\n                    <input type=\"text\" placeholder=\"Enjoy the experiences, find excursions and tours\" onChange={(e)=>props.filtrarCities(e.target.value)} ></input>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )           \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cities: state.citiesReducer.cities\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getCities: citiesActions.getCities,\r\n    filtrarCities: citiesActions.filtrarCities\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionCities)","C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\Cities.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\redux\\actions\\citiesActions.js",[],"C:\\Users\\Personal\\Desktop\\Proyectos\\gomez-Mytinerary\\frontend\\src\\componentes\\CarouselFoto.js",[],["84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":10,"column":8,"nodeType":"92","endLine":10,"endColumn":10,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"91","line":12,"column":8,"nodeType":"92","endLine":12,"endColumn":10,"suggestions":"94"},{"ruleId":"90","severity":1,"message":"91","line":9,"column":8,"nodeType":"92","endLine":9,"endColumn":10,"suggestions":"95"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["100"],["101"],["102"],["98"],["99"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"103","fix":"105"},{"desc":"103","fix":"106"},"Update the dependencies array to be: [props]",{"range":"107","text":"108"},{"range":"109","text":"108"},{"range":"110","text":"108"},[350,352],"[props]",[414,416],[233,235]]